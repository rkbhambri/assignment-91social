{"version":3,"sources":["helpers/miscellenous.js","Routes.js","components/Loader/Loader.js","components/Header/Header.js","components/Menu/Menu.js","components/Layout/Layout.js","App.js","serviceWorker.js","store/utility.js","store/reducer/history.js","store/reducer/address.js","index.js","store/actions/actionTypes.js"],"names":["isEqual","item1","item2","toLowerCase","debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","convertDateFormat","date","month","Date","getMonth","day","getDate","getFullYear","isEmpty","item","trim","isArrayNotEmpty","arr","length","isArrayEmpty","authenticated_routes","path","component","React","lazy","Loader","props","className","style","height","Header","Menu","borderBottom","window","location","pathname","to","Layout","children","App","routes","Suspense","fallback","map","key","exact","routesArray","routeExist","i","getRedirectPath","Boolean","hostname","match","updateObject","oldObject","updatedProperties","initialState","spacexHistory","setSpacexHistory","state","action","emptySpacexHistory","History","type","actionTypes","spacexAddress","setSpacexAddress","emptySpacexAddress","Address","rootReducer","combineReducers","history","address","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","basename","process","split","pop","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","SET_SPACEX_HISTORY","EMPTY_SPACEX_HISTORY","SET_SPACEX_ADDRESS","EMPTY_SPACEX_ADDRESS"],"mappings":"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","file":"static/js/main.191e81f7.chunk.js","sourcesContent":["\nexport const parseData = (data) => {\n    return JSON.parse(JSON.stringify(data));\n};\n\nexport const isEqual = (item1, item2) => {\n    if (typeof (item1) === 'number' && typeof (item2) === 'number') {\n        return item1 === item2;\n    }\n    if (typeof (item1) === 'string' && typeof (item2) === 'string') {\n        return item1.toLowerCase() === item2.toLowerCase();\n    }\n};\n\nexport const debounce = (func, wait, immediate) => {\n    var timeout;\n\n    return function executedFunction() {\n        var context = this;\n        var args = arguments;\n\n        var later = function () {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n\n        var callNow = immediate && !timeout;\n\n        clearTimeout(timeout);\n\n        timeout = setTimeout(later, wait);\n\n        if (callNow) func.apply(context, args);\n    };\n};\n\nexport const convertDateFormat = (date) => {\n    date = new Date(date);\n    let month = date.getMonth() + 1;\n    let day = date.getDate();\n    month = month < 10 ? `0${month}` : month;\n    day = day < 10 ? `0${day}` : day;\n    return `${date.getFullYear()}-${month}-${day}`;\n};\n\nexport const isNull = (value) => {\n    return value === null;\n};\n\nexport const validateValues = (value) => {\n    var regex = /^[a-zA-Z0-9!@#$%^&*)(. _-]{0,16}$/;\n    return regex.test(value);\n};\n\nexport const getItem = (key) => {\n    return localStorage.getItem(key);\n};\nexport const setItem = (key, value) => {\n    return localStorage.setItem(key, value);\n};\n\nexport const validateEmail = (email) => {\n    let isEmailValid = false;\n    let regex = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n    if (email.trim() !== '' && regex.test(email)) {\n        isEmailValid = true;\n    }\n    return isEmailValid;\n};\n\nexport const validatePassword = (password) => {\n    let isPasswordValid = false;\n    let regex = /^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9\\S]+)$/;\n    if (password.trim() !== '' && regex.test(password)) {\n        isPasswordValid = true;\n    }\n    return isPasswordValid;\n};\n\n\nexport const isObjectEmpty = (obj) => {\n    return Object.keys(obj).length === 0;\n};\n\nexport const isEmpty = (item) => {\n    if (typeof item === 'number') {\n        return false;\n    }\n    return item.trim() === '';\n};\n\nexport const isArrayNotEmpty = (arr) => {\n    return arr.length > 0;\n};\n\nexport const isArrayEmpty = (arr) => {\n    return arr.length === 0;\n};\n\nexport const indexOf = (arr, value) => {\n    return arr.indexOf(value);\n};\n\nexport const isBoolean = (value) => {\n    return typeof value === \"boolean\";\n};\n\nexport const isNumber = (value) => {\n    return typeof value === \"number\";\n};\n\nexport const isString = (value) => {\n    return typeof value === \"string\";\n};\n\nexport const deleteItem = (array, id) => {\n    const updatedData = array.filter(item => item !== id);\n    return updatedData;\n};\n\nexport const isIncludes = (array, value) => {\n    return array.includes(value);\n};\n","import React from 'react';\nconst History = React.lazy(() => import('./components/History/History'));\nconst Address = React.lazy(() => import('./components/Address/Address'));\n\nexport const authenticated_routes = [\n    {\n        path: '/history',\n        component: History\n    },\n    {\n        path: '/address',\n        component: Address\n    },\n    // {\n    //     path: '/events/:id/leaderboard',\n    //     component: Leaderboard\n    // }\n];\n","import React from 'react';\nimport './Loader.css'\n\nconst Loader = (props) => {\n    return (\n        <div className=\"loader-wrapper d-flex\" style={{ height: '70vh' }}>\n            <div className=\"loader\"></div>\n        </div>\n    );\n};\n\nexport default Loader;\n","import React from 'react';\nimport './Header.css';\n\nconst Header = (props) => {\n    return (\n        <div className=\"header d-flex justify-content-between\">\n            <p>91 Social</p>\n        </div>\n    );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { isEqual } from '../../helpers/miscellenous'\nimport './Menu.css';\n\nconst Menu = (props) => {\n    return (\n        <div className=\"menu\">\n            <ul>\n                <li style={{ borderBottom: isEqual(window.location.pathname, '/history') ? '2px solid #ccc' : '' }}>\n                    <Link to='/history'>History</Link>\n                </li>\n                <li style={{ borderBottom: isEqual(window.location.pathname, '/address') ? '2px solid #ccc' : '' }}>\n                    <Link to='/address'>Address</Link>\n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Menu;\n","import React from 'react';\nimport Header from '../Header/Header';\nimport Menu from '../Menu/Menu';\n\nconst Layout = (props) => {\n    return (\n        <div className=\"layout\">\n            <Header />\n            <Menu />\n            {props.children}\n            {/* <Footer /> */}\n        </div>\n    );\n};\n\nexport default Layout;\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { authenticated_routes } from './Routes';\nimport Loader from './components/Loader/Loader';\nimport Layout from './components/Layout/Layout';\n\nconst App = (props) => {\n\n    const getRedirectPath = (routesArray) => {\n        let routeExist = false;\n        for (let i = 0; i < routesArray.length; i++) {\n            if (routesArray[i].path === window.location.pathname) {\n                routeExist = true;\n            }\n        }\n        return routeExist ? window.location.pathname : '/history';\n    };\n\n    let routes = (\n        <Layout>\n            <React.Suspense fallback={<Loader />}>\n                {\n                    authenticated_routes.map(({ path, component }, key) => <Route exact path={path} component={component} key={key} />)\n                }\n            </React.Suspense>\n            <Redirect exact to={getRedirectPath(authenticated_routes)} />\n        </Layout>\n    );\n\n    return (\n        <Switch>\n            {routes}\n        </Switch>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*\n * This is the basic function vastly used in in reducers to update or concatinate\n * their old object with new properties\n */\n\nexport const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    };\n};\n","\nimport * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    spacexHistory: []\n};\n\nconst setSpacexHistory = (state, action) => {\n    return updateObject(state, {\n        spacexHistory: action.spacexHistory\n    });\n};\n\nconst emptySpacexHistory = (state, action) => {\n    return updateObject(state, {\n        spacexHistory: []\n    });\n};\n\nconst History = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_SPACEX_HISTORY:\n            return setSpacexHistory(state, action);\n        case actionTypes.EMPTY_SPACEX_HISTORY:\n            return emptySpacexHistory(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default History;\n","\nimport * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    spacexAddress: []\n};\n\nconst setSpacexAddress = (state, action) => {\n    return updateObject(state, {\n        spacexAddress: action.spacexAddress\n    });\n};\n\nconst emptySpacexAddress = (state, action) => {\n    return updateObject(state, {\n        spacexAddress: []\n    });\n};\n\nconst Address = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SET_SPACEX_ADDRESS:\n            return setSpacexAddress(state, action);\n        case actionTypes.EMPTY_SPACEX_ADDRESS:\n            return emptySpacexAddress(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default Address;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport History from './store/reducer/history';\nimport Address from './store/reducer/address';\n\nconst getBasename = () => {\n    return `/${process.env.PUBLIC_URL.split('/').pop()}`;\n};\n\n/*\n * combining all the reducers\n */\nconst rootReducer = combineReducers({\n    history: History,\n    address: Address\n});\n\n/*\n * composeEnhancers is for chrome dev toolbar which helps us see store management of redux\n */\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n/*\n * Creating Store and applying middleware \n */\nconst store = createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n));\n\n/*\n * Wrapping the main app with BrowserRouter (provides routing and helps us navigate through project)\n * Provider is a part of Redux which is needed in order to get access to store throughout our project \n */\nconst app = (\n    <Provider store={store}>\n        <BrowserRouter basename={getBasename()}>\n            <App />\n        </BrowserRouter>\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/*\n * Define which type of action to be dispatched to reducer\n */\n\n// History\nexport const SET_SPACEX_HISTORY = 'SET_SPACEX_HISTORY';\nexport const EMPTY_SPACEX_HISTORY = 'EMPTY_SPACEX_HISTORY';\n\n// Address\nexport const SET_SPACEX_ADDRESS = 'SET_SPACEX_ADDRESS';\nexport const EMPTY_SPACEX_ADDRESS = 'EMPTY_SPACEX_ADDRESS';\n"],"sourceRoot":""}